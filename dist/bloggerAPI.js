!function(e,t){if("function"==typeof define&&define.amd)define("gulpEasyTaskBabelModuleId3872890",["exports","module","babel-runtime/core-js/promise","babel-runtime/regenerator","babel-runtime/core-js/get-iterator","lodash","babel-runtime/helpers/interop-require-default","./asyncLog","debug","is-url","request-promise","html-img-digger","html-taiwan-address-digger"],t);else if("undefined"!=typeof exports&&"undefined"!=typeof module)t(exports,module,require("babel-runtime/core-js/promise"),require("babel-runtime/regenerator"),require("babel-runtime/core-js/get-iterator"),require("lodash"),require("babel-runtime/helpers/interop-require-default"),require("./asyncLog"),require("debug"),require("is-url"),require("request-promise"),require("html-img-digger"),require("html-taiwan-address-digger"));else{var r={exports:{}};t(r.exports,r,e._Promise,e._regeneratorRuntime,e._getIterator,e._,e._interopRequireDefault,e.asyncLog,e.debug,e.isUrl,e.request,e.imgDigger,e.addrDigger),e.gulpEasyTaskBabelModuleId3872890=r.exports}}(this,function(e,t,r,a,s,u,n,l,i,o,d,g,f){"use strict";function c(e){var t=this,u=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n=(arguments.length<=2||void 0===arguments[2]?{}:arguments[2],h["default"](k.namespace+":getPostsList"));return e||r["default"].reject(n.namespace+": expect first arg to be a number as bloggerId"),u=p["default"].defaults({},u,{key:null,maxResults:20,status:"live",fetchBodies:!0,fetchImages:!1,pageToken:void 0}),n("[start] get posts by bloggerId: "+e+", pageToken: "+u.pageToken),x["default"]({json:!0,method:"GET",url:"https://www.googleapis.com/blogger/v3/blogs/"+e+"/posts",qs:u}).then(b["default"](n),b["default"](n)).then(function(e){var r,u,n,l,i,o,d;return a["default"].async(function(t){for(;;)switch(t.prev=t.next){case 0:r=!0,u=!1,n=void 0,t.prev=3,l=s["default"](e.items);case 5:if(r=(i=l.next()).done){t.next=23;break}return o=i.value,t.next=9,a["default"].awrap(q["default"].dig(o.content));case 9:if(t.t0=t.sent,t.t0){t.next=12;break}t.t0=[];case 12:return o.address=t.t0,t.next=15,a["default"].awrap(v["default"].dig(o.content));case 15:if(t.t1=t.sent,t.t1){t.next=18;break}t.t1=[];case 18:o.images=t.t1,o.location&&o.location.name&&o.address.unshift(o.location.name);case 20:r=!0,t.next=5;break;case 23:t.next=29;break;case 25:t.prev=25,t.t2=t["catch"](3),u=!0,n=t.t2;case 29:t.prev=29,t.prev=30,!r&&l["return"]&&l["return"]();case 32:if(t.prev=32,!u){t.next=35;break}throw n;case 35:return t.finish(32);case 36:return t.finish(29);case 37:return d=p["default"].map(e.items,function(e){return{address:e.address,body:e.content,cover:p["default"].get(e,"images[0].url",""),published:e.published,images:p["default"].pluck(e.images,"url"),title:e.title,url:e.url}}),e.nextPageToken&&(d.nextPageToken=e.nextPageToken),t.abrupt("return",d);case 40:case"end":return t.stop()}},null,t,[[3,25,29,37],[30,,32,36]])})}function m(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],t=h["default"](k.namespace+":getByUrl");return e=p["default"].defaults({},e,{key:null}),t("[start] GET byUrl "+e.url),x["default"]({json:!0,method:"GET",url:"https://www.googleapis.com/blogger/v3/blogs/byurl",qs:e}).then(b["default"](t),b["default"](t))}var p=n["default"](u),b=n["default"](l),h=n["default"](i),x=(n["default"](o),n["default"](d)),v=n["default"](g),q=n["default"](f),k=h["default"]("blogger-posts-crawler:bloggerAPI");t.exports={getByUrl:m,getPostsList:c}});
//# sourceMappingURL=data:application/json;base64,